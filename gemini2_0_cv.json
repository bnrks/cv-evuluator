{
  "name": "gemini2.0-cv",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "readStatus": "unread"
        },
        "options": {
          "dataPropertyAttachmentsPrefixName": "CVDeneme",
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "7eeb427a-32fd-41a7-b395-41855dec58c6",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "j64kqY3d6SAv1Ywq",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputDataFieldName": "CVDeneme0",
        "name": "={{ $json.from.value[0].name}}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1spqGbbD3FhmRUllm10jcDYC0j7ze_Jgg",
          "mode": "list",
          "cachedResultName": "CV Upload",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1spqGbbD3FhmRUllm10jcDYC0j7ze_Jgg"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        220,
        0
      ],
      "id": "0c760703-049f-406f-a273-c53de87845ef",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "obhhh6DtFtejCmQ7",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        440,
        0
      ],
      "id": "854dd419-4d45-40cf-b37e-e8a77b8518be",
      "name": "Google Drive1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "obhhh6DtFtejCmQ7",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        660,
        0
      ],
      "id": "3a5e5596-f3c3-4e4f-8ce6-2ffc01535965",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "schemaType": "fromJson",
        "jsonSchemaExample": "{\n   \"candidate_name\": \"Ad Soyad\",\n   \"email_address\": \"email@example.com\",\n   \"contact_number\": \"+90 555 123 45 67\"\n}",
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        1320,
        -260
      ],
      "id": "036b495b-a0df-495e-afb7-fd5d1de33d71",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1400,
        -60
      ],
      "id": "f5bdd2fd-4251-42e7-bde5-2ff3ac0825c2",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "kpB1TgIsXwrLQHzY",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Tüm girdileri al (n8n'de birden fazla item olabilir)\nconst items = $input.all();\nconst output = [];\n\nfor (const item of items) {\n  // Girdi objesinde beklenen yapı var mı kontrol et\n  if (item.json && item.json.message && item.json.message.content) {\n    const content = item.json.message.content;\n    \n    // Çıktı objesini oluştur\n    output.push({\n      json: {\n        summary: content.summary || '',\n        strengths: content.strengths || '',\n        critical_gaps: content.critical_gaps || '',\n        converted_score: content.converted_score || '',\n        hire_recommendation: content.hire_recommendation || ''\n      }\n    });\n  } else {\n    // Yapı beklenen gibi değilse hata mesajı döndür\n    output.push({\n      json: {\n        error: 'Expected structure not found in input data'\n      }\n    });\n  }\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2220,
        100
      ],
      "id": "ae8438ff-48f5-4f7f-b755-f397364a968c",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2700,
        40
      ],
      "id": "b5e1f8b1-cebf-461e-900e-d50c815007dc",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "10wltH7SYDcp8PR82yuWDaQZjAcwJxgI00JmBOsjfsdU",
          "mode": "list",
          "cachedResultName": "CVLER",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10wltH7SYDcp8PR82yuWDaQZjAcwJxgI00JmBOsjfsdU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10wltH7SYDcp8PR82yuWDaQZjAcwJxgI00JmBOsjfsdU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name Surname": "={{ $json.candidate_name }}",
            "Mail Address": "={{ $json.email_address }}",
            "Contact Number": "={{ $json.contact_number }}",
            " Summary": "={{ $json.summary }}",
            "Critical Gaps": "={{ $json.critical_gaps }}",
            "Strengths": "={{ $json.strengths }}",
            "Score": "={{ $json.converted_score }}",
            "Hire Recommendation": "={{ $json.hire_recommendation }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name Surname",
              "displayName": "Name Surname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Mail Address",
              "displayName": "Mail Address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Contact Number",
              "displayName": "Contact Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": " Summary",
              "displayName": " Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Strengths",
              "displayName": "Strengths",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Critical Gaps",
              "displayName": "Critical Gaps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hire Recommendation",
              "displayName": "Hire Recommendation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2920,
        40
      ],
      "id": "72502478-b2d3-4ffc-8b8f-38647892d906",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FQu6ow1XXyjyqB7k",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c32f712a-9dd2-421d-90de-9c35b5ec947f",
              "name": "candidate_name",
              "value": "={{ $json.output.candidate_name }}",
              "type": "string"
            },
            {
              "id": "a190fedd-f779-441b-953f-67be053105cd",
              "name": "email_address",
              "value": "={{ $json.output.email_address }}",
              "type": "string"
            },
            {
              "id": "c4c8c8d4-866d-4a7e-b0ed-fe2eae7ee6f4",
              "name": "contact_number",
              "value": "={{ $json.output.contact_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        -220
      ],
      "id": "8f5fd1d0-bac5-4d42-a8e6-71a31b5dc029",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp-01-21",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1220,
        340
      ],
      "id": "e2f3caff-d607-41bd-86b6-645c74a2230a",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "EUZCrPWrVgWY2dnY",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"summary\": \"<Summary text here>\",\n  \"strengths\": \"<Strengths text here>\",\n  \"critical_gaps\": \"<Critical Gaps text here>\",\n  \"score\": \"<Raw Score>\",\n  \"converted_score\": \"<Converted Score>\",\n  \"hire_recommendation\": \"<Accept/Reject>\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1400,
        340
      ],
      "id": "9af84402-8090-466f-831d-92fe3fe45496",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e900eeb7-63e4-4a8e-aa7c-aec69250fd40",
              "name": "summary",
              "value": "={{ $json.output.summary }}",
              "type": "string"
            },
            {
              "id": "5d907905-6bbe-4c34-8472-5433673829e4",
              "name": "strengths",
              "value": "={{ $json.output.strengths }}",
              "type": "string"
            },
            {
              "id": "637046d6-8022-4085-bc29-a9d605ce6497",
              "name": "critical_gaps",
              "value": "={{ $json.output.critical_gaps }}",
              "type": "string"
            },
            {
              "id": "46a03a41-3f28-4163-aaae-873a8125e20c",
              "name": "score",
              "value": "={{ $json.output.score }}",
              "type": "string"
            },
            {
              "id": "2fd84be9-b66d-4fec-a493-650fdeefe3b4",
              "name": "converted_score",
              "value": "={{ $json.output.converted_score }}",
              "type": "string"
            },
            {
              "id": "f633650e-d694-4a14-8f98-f3b7f227d67e",
              "name": "hire_recommendation",
              "value": "={{ $json.output.hire_recommendation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1800,
        120
      ],
      "id": "952214b6-52fc-446f-a5c5-4153b904c3f3",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=CV:{{ $json.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Role: You are the world's most rigorous and detail-oriented technical recruiter. You have been hiring software developers for top-tier teams at Google, Amazon, and NASA for 20 years. You never compromise and tolerate no mistakes. **IMPORTANT NOTE:** Following the instructions below, **produce output only and exactly in the specified JSON format.** Do not add any other text or explanations. Your output **must be solely** a JSON object.  Step 1: Understand the Candidate Profile Extract the following information from the candidate's CV based on the role specified by the candidate:  Years of experience: Relevant experience in the role. Technologies and tools: List the technologies used with proficiency levels (expert, proficient, basic). Project complexity: Consider user base size and technical depth. Certifications, education, and specialized training: Include relevant credentials. Skill gaps: Note any clear missing skills required for the role (e.g., \"No cloud knowledge\", \"No microservices experience\"). Step 2: Compare with Ideal Profiles Based on the role provided in the CV, evaluate the candidate against the following reference profiles:  10/10 Ideal Candidate:  7+ years of relevant experience with enterprise-level projects. Deep expertise in key technologies and frameworks required for the role. Projects with large or medium user bases or significant technical complexity. Strong certifications, relevant education, and proven contributions (e.g., open-source). 7/10 Candidate:  3-7 years of experience with mid-scale projects. Adequate understanding of key technologies (basic to intermediate level). Projects with a moderate user base or technical complexity. Some relevant certifications or education, but lacking in some ideal areas. 3/10 Candidate:  Minimal experience (e.g., internship or tutorial-level projects). Limited technical skills and understanding of the required technologies. Projects of low complexity with minimal impact. Lacks significant certifications or formal education related to the role. Step 3: Critical Evaluation Criteria Rate each criterion on a scale of 0-3 (3 = ideal, 0 = none):  Core Skills: Fundamental programming, algorithms, and data structures. Technical Frameworks/Tools: Proficiency in essential frameworks, libraries, or tools. Cloud/DevOps (if applicable): Experience with cloud platforms, CI/CD, containerization, etc. Databases and Data Management: Knowledge of SQL/NoSQL databases, data modeling, etc. System Architecture: Ability to design scalable, maintainable systems (e.g., microservices, RESTful APIs). Soft Skills: Communication, teamwork, leadership, and adaptability. Step 4: Scoring and Result  Sum the scores for all criteria (maximum total score is 18 points). Convert the total score to a 10-point scale using: 𝐶 𝑜 𝑛 𝑣 𝑒 𝑟 𝑡 𝑒 𝑑 𝑆 𝑐 𝑜 𝑟 𝑒 = ( 𝑇 𝑜 𝑡 𝑎 𝑙 𝑆 𝑐 𝑜 𝑟 𝑒 / 18 ) ∗ 10 ConvertedScore=(TotalScore/18)∗10 Use the following scale: 9-10 → 10/10 Ideal candidate 6-8.9 → 7/10 Mid-level 0-5.9 → 3/10 Weak Step 5: Generate Report - IMPORTANT: OUTPUT ONLY AND EXACTLY IN THE JSON FORMAT BELOW. DO NOT ADD ANYTHING ELSE: {\n  \"summary\": \"<Summary text here>\",\n  \"strengths\": \"<Strengths text here>\",\n  \"critical_gaps\": \"<Critical Gaps text here>\",\n  \"score\": \"<Raw Score>\",\n  \"converted_score\": \"<Converted Score>\",\n  \"hire_recommendation\": \"<Accept/Reject>\"\n} Example Output: {   \"summary\": \"The candidate demonstrates a solid background in software development with moderate experience in handling mid-scale projects.\",   \"strengths\": \"Strong foundational programming skills and familiarity with key frameworks.\",   \"critical_gaps\": \"Limited exposure to cloud platforms and advanced system architecture design.\",   \"score\": \"7.0\",   \"converted_score\": \"7.0\",   \"hire_recommendation\": \"Accept with reservations\" }"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1240,
        120
      ],
      "id": "23334d3d-d2ee-4aec-861a-51314a8ef56d",
      "name": "CV Değerlendirme"
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          },
          {
            "node": "CV Değerlendirme",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "CV Değerlendirme",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "CV Değerlendirme",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CV Değerlendirme": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7669c5c2-9bf4-4e58-bc16-733f7a80afa1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "aba595f4147edcc21e730b4a92eec79cdb48afb2bbe84dc667f14306f564ce9e"
  },
  "id": "pKe3ZZzU6n859cRY",
  "tags": []
}